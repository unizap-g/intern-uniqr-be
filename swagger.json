{
  "openapi": "3.0.0",
  "info": {
    "title": "BiZap API",
    "version": "1.0.0",
    "description": "API documentation for BiZap authentication and user management."
  },
  "servers": [
    { "url": "http://localhost:3000/api" }
  ],
  "paths": {
    "/auth/send-otp": {
      "post": {
        "summary": "Send OTP to mobile number",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "countryCode": { "type": "string", "example": "91" },
                  "mobileNumber": { "type": "string", "example": "9876543210" }
                },
                "required": ["countryCode", "mobileNumber"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "OTP sent successfully" },
          "400": { "description": "Validation error" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/auth/verify-otp": {
      "post": {
        "summary": "Verify OTP and sign up/login",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "countryCode": { "type": "string", "example": "91" },
                  "mobileNumber": { "type": "string", "example": "9876543210" },
                  "otp": { "type": "string", "example": "123456" }
                },
                "required": ["countryCode", "mobileNumber", "otp"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Authentication successful" },
          "400": { "description": "Validation error" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/auth/exchange-tokens": {
      "post": {
        "summary": "Exchange UUID API key for JWT tokens",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuidApiKey": { "type": "string", "example": "bz_123e4567-e89b-12d3-a456-426614174000" }
                },
                "required": ["uuidApiKey"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Token exchange successful" },
          "400": { "description": "Invalid API key" },
          "401": { "description": "Expired or invalid API key" }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "summary": "Refresh access token",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": { "type": "string", "example": "your-refresh-token" }
                },
                "required": ["refreshToken"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "New access token issued" },
          "400": { "description": "Invalid refresh token" }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "summary": "Sign out user and invalidate session",
        "description": "Signs out the authenticated user by invalidating their session in Redis. NO PARAMETERS REQUIRED - only Authorization header with Bearer token is needed.",
        "tags": ["Auth"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [],
        "responses": {
          "200": { 
            "description": "Sign out successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Sign out successful. Session terminated securely." }
                  }
                }
              }
            }
          },
          "401": { 
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "message": { "type": "string", "example": "No token provided." }
                  }
                }
              }
            }
          },
          "500": { 
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "message": { "type": "string", "example": "An internal server error occurred during sign out." }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/protected": {
      "get": {
        "summary": "Protected route (requires authentication)",
        "tags": ["Auth"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Authenticated access" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/user/profile": {
      "get": {
        "summary": "Get user profile",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "User profile data" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check",
        "tags": ["System"],
        "responses": {
          "200": { "description": "Service is healthy" },
          "503": { "description": "Service unavailable" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
